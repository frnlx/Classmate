// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @unique
  name         String
  bio          String?
  created_at   DateTime     @default(now())
  pfp          String
  classes      Classroom[]
  ownedClasses Classroom[]  @relation("owner")
  Comment      Comment[]
  Submission   Submission[]
  Resource     Resource[]
}

model Classroom {
  id          String     @id @default(cuid())
  name        String
  members     User[]
  owner       User       @relation("owner", fields: [ownerId], references: [id])
  ownerId     String
  categories  Category[]
  created_at  DateTime   @default(now())
  inviteID    String     @unique
  subject     String?
  description String?
  emoji       String?
}

model Category {
  id          String     @id @default(cuid())
  title       String
  classroom   Classroom? @relation(fields: [classroomId], references: [id])
  classroomId String?
  Resource    Resource[]
}

model Resource {
  id         String       @id @default(cuid())
  title      String
  content    String
  order      Int
  createdAt  DateTime     @default(now())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  category   Category     @relation(fields: [categoryId], references: [id])
  categoryId String
  Assignment Assignment?
  Discussion Discussion?
  NormalPost NormalPost?
  type       ResourceType
  Comment    Comment[]
}

model Assignment {
  id         String       @id @unique
  resource   Resource     @relation(fields: [id], references: [id], onDelete: Cascade)
  dueDate    DateTime     @default(now())
  point      Int
  xpReward   Int
  Submission Submission[]
}

model Discussion {
  id       String   @id @unique
  resource Resource @relation(fields: [id], references: [id], onDelete: Cascade)
  dueDate  DateTime @default(now())
  point    Int
  xpReward Int
}

model NormalPost {
  id       String   @id @unique
  resource Resource @relation(fields: [id], references: [id], onDelete: Cascade)
}

enum ResourceType {
  ASSIGNMENT
  NORMAL_POST
  DISCUSSION
}

model Comment {
  id         BigInt   @id @default(autoincrement())
  content    String
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  resourceId String
  createdAt  DateTime @default(now())
}

model Submission {
  id           BigInt     @id @default(autoincrement())
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  assignmentId String
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  fileUrl      String
  createdAt    DateTime   @default(now())
}
