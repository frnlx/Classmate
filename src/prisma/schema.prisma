// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @unique
  name          String
  created_at    DateTime     @default(now())
  pfp           String
  memberClasses Member[]
  ownedClasses  Classroom[]  @relation("owner")
  Comment       Comment[]
  Submission    Submission[]
  Resource      Resource[]
}

model Member {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  classroom Classroom @relation(fields: [classroomId], references: [id])
  xp        Int       @default(0)
  points    Int       @default(0)
  inactive  Boolean   @default(false)
  createdAt DateTime  @default(now())

  userId       String
  classroomId  String
  MemberReward MemberReward[]
}

model MemberReward {
  id        String    @id @default(cuid())
  member    Member    @relation(fields: [memberId], references: [id])
  name      String
  classroom Classroom @relation(fields: [classroomId], references: [id])
  note      String
  redeemed  Boolean   @default(false)

  memberId    String
  classroomId String
}

model Classroom {
  id           String         @id @default(cuid())
  name         String
  members      Member[]
  owner        User           @relation("owner", fields: [ownerId], references: [id])
  ownerId      String
  categories   Category[]
  created_at   DateTime       @default(now())
  inviteID     String         @unique
  subject      String?
  description  String?
  emoji        String?
  MemberReward MemberReward[]
}

model Category {
  id          String     @id @default(cuid())
  title       String
  classroom   Classroom? @relation(fields: [classroomId], references: [id])
  classroomId String?
  Resource    Resource[]
}

model Resource {
  id           String       @id @default(cuid())
  title        String
  content      String
  order        Int
  createdAt    DateTime     @default(now())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  category     Category     @relation(fields: [categoryId], references: [id])
  categoryId   String
  Assignment   Assignment?
  Discussion   Discussion?
  NormalPost   NormalPost?
  type         ResourceType
  Comment      Comment[]
  attachment   Attachment?  @relation(fields: [attachmentId], references: [id])
  attachmentId String?      @unique
}

model Assignment {
  id         String       @id @unique
  resource   Resource     @relation(fields: [id], references: [id], onDelete: Cascade)
  dueDate    DateTime     @default(now())
  point      Int
  xpReward   Int
  Submission Submission[]
}

model Discussion {
  id       String   @id @unique
  resource Resource @relation(fields: [id], references: [id], onDelete: Cascade)
  dueDate  DateTime @default(now())
  point    Int
  xpReward Int
}

model NormalPost {
  id       String   @id @unique
  resource Resource @relation(fields: [id], references: [id], onDelete: Cascade)
}

enum ResourceType {
  ASSIGNMENT
  NORMAL_POST
  DISCUSSION
}

model Comment {
  id         BigInt   @id @default(autoincrement())
  content    String
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  resourceId String
  createdAt  DateTime @default(now())
}

model Submission {
  id           BigInt      @id @default(autoincrement())
  userId       String
  user         User        @relation(fields: [userId], references: [id])
  assignmentId String
  assignment   Assignment  @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())
  attachment   Attachment? @relation(fields: [attachmentId], references: [id])
  attachmentId String?     @unique
}

model Attachment {
  id         String      @id @default(cuid())
  data       String
  filename   String
  Submission Submission?
  Resource   Resource?
}
